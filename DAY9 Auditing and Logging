------------------------------------------------------------Linux Logs--------------------------------------------------------------------------------------

AUTHENTICATION
/var/log/auth.log - Authentication related events
/var/run/utmp     - Users currently logged in
/var/log/wtmp     - History file for utmp
/var/log/btmp     - Failed login attempts

last -f /var/run/utmp     <--------    check what users are currently logged in
last -f /var/log/wtmp     <--------    Check the history file
sudo last -f /var/log/btmp     <-------   Look for failed login attempts

accepted password 
pam_unix(sshd:session): session opened for user root by (uid=#)
systemd-logind[531]: New session ## of user root

Public login
Accepted publickey for root from __________ on port _____ 
Pam_unix(sshd:session): session opened for user root by (uid=0)
systemd-logind[531]: New session ## of user root

Trying to change who they are
Accepted publickey for root from __________ on port _____ 
Pam_unix(sshd:session): session opened for user root by (uid=0)
systemd-logind[531]: New session ## of user root
pam_unix(cron:session): session opened for user root by (uid=0)
Successful su for crotty by root
...
Failed su for root by crotty
...
Successful su for root by crotty
pam_unix(su:session): session opened for user root by root(uid=1002)


APPLICATION
apache - Web Server (dir)
apt    - Package Manager (dir)

/var/log/mysql.log


SYSTEM
/var/log/messages - Legacy Catch all
/var/log/syslog - Ubuntu/Debian Catch all
dmesg = Device Messenger (queires /proc/kmsg)
Kernel Ring Buffer - Never fills
First logs generated by the system



IMPORTANT FILES OFR LOGGING 
----Location    : /var/log

----Config File : /etc/rsyslog.conf         <-------    log entries follow syslog standard "facility.severity"
                                                    facility  -  what program, or part of system, log is from
                                                    severity = urgency
                  Severity Levels
                  0  emerg, panic:  Emergency: system is unusable
                  1  alert:         Action must be taken immediately
                  2  crit:          Critical conditions
                  3  err, error:    Error conditions
                  4  warn, warning: Warning conditions
                  5  notice:        Normal but significant condition
                  6  info:          Informational messages
                  7  Debug:         Debug-level messages

                  *.info    =  anything at level 6 and higher levels
                  *.=info   =  grab only info and no other severity level
                  @@IP:port =  remote logging is happening

                  .no/none = exlude it
                  !=info   = anying besides info


----Service     : /usr/sbin/rsyslogd


LOG ENUMERATION / MANAGEMENT
Best Practices:
-Meaningful Naming Schema
-Separate logs logically and by precedence
-Sync time across network
-Control log access
-Utilize cron jobs / scripts
    logrotate
    /etc/logrotate.conf




syslog <---- plaintext
journald <------ can be plaintext, javascript notation, more


----------------------------------------------------LOGGING COMMANDS----------------------------------------------------------------------------------------

journalctl -e    <------------  shows the last logs recieved
journalctl --list-boots    <--------  Log history of all the boots on the systems
journalctl -b <boot id>   <---------  Grabs the logs for that specific boot session
journalctl -u ssh.service  <-------- Grab specific logs

tail -f              <---------- Continuously show end of file
less /var/log/syslog <----------  View Log in page viewer

logger               <---------- Send a user generated message to system Log i.e. Starting Update

> /var/log/messages  <---------- Wipes Logs


last -f /var/log{wtmp,btmp} <----------- Needed to view data files



xpath 
xpath -e 'query' <file>

xpath for multiple queries
xpath -e 'query1 | query2' <file>
EXAMPLE: xpath -e '//@addr | //@portid' output.xml

Select every IP address with open (in use) ports using XPATH queries and XPATH axes.
xpath -q -e '//@portid/ancestor::host/address/@addr | //@portid ' output.xml | md5sum

jq
cat <file> | jq '.'      <------- formats the file "pretty printed"

look for a specific value in a file, only grab uniq values, and count how many there are
EXAMPLE jq '."id.orig_h"' conn.log | sort | uniq | wc -l

Use jq to locate and count connections where the destination IP sent more than 40 bytes to the source IP.
EXAMPLE jq '. | select(."resp_ip_bytes">40) | .resp_ip_bytes' conn.log | wc -l


