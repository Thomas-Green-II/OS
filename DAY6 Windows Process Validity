A process is a program that executes

dll injection - Not stored on a disk, but it is strored in memory


------------------------------------------------Process Validitty-------------------------------------------------------------------------------------------
Used to find out if the processes running on the machine are the same ones that the binary called, are they legit processes?

Process <------- requires interaction to execute
Service <------- Runs on the background quietly 
DLL     <------- Library that contains pointers to resources available for other programs to interact with. Happen when you manipulate handles

C:\Windows\System32 <------- Where the system processes and services normally run from

command line is the arguments being passed to service host telling it to launch the service by its service name not its display name
if svchost -k is present it is a legit service, 99% of the time

scheduled task <------ run by task scheduler, form of persistance, can be set up based on time and/or criteria set

If its not in the root directory, you have to specify where the scheduled task is
Do not expand Microsoft for this class

Conhost = Commandline/Powershell

At logon time = any users logon 

MpsSvc <---- Service name for windows Firewall


---------------------------------------------------------------COMMANDS-------------------------------------------------------------------------------------

PROCESSES
tasklist <------- How to find all processes on windows
get-process <---/ 
get-ciminstance win32_process  <------- The CIM that deals with processes
get-ciminstance win32_process | select *  <------- grabs every process with more information 
get-ciminstance win32_process | select * -first  <------ grabs the first process with a lot of information
task manager <------ GUI to look at tasks and processes

Get-Process | Select Name, Id, Path
Get-Ciminstance Win32_service | Select Name, Processid, Pathname

How do we discover Normal, abnormal, and Hidden Processes and Services?
Get-Process SMSS,CSRSS,LSASS | Sort -Property Id

See the handles
get-process -Name lsass | select -ExpandProperty modules | out-file $home\desktop\handles.txt -width 4096
get-process -Name lsass | select -ExpandProperty modules | format-table -wrap    <---- what are the handles for lsass
get-ciminstance win32_process | where {$_.Name -like "*LSASS*"} | Select *

Do boot processes have descriptions?
Get-Process | Select Name, Id, Description | Sort -Property Id

Are Priority Levels of processes important?
Get-Process | Select Name, Priorityclass
Tasklist /m


SERVICES
How would malware use Schedule Task?
schtasks /query | more
Get-ScheduledTask | Select * | Select -First 5


get-service  <----- get the services
sc.exe   <----- service controller
sc.exe showsid Power   <------ every service should have a SID
sc.exe showsid "Windows Powers"    <------ does give you a sid, but you have to use the service name not what you see it as.
svchost.exe -k NetworkService -s <----- loads the service group rather than just a service
sc.exe queryrex type=service state=inactive <------ see what services are inactive
sc.exe queryrex type=service <------ shows us what services are active


SCHEDULED TASKS
schtasks  <----- look at scheduled tasks
schedtasts.exe /query /tn "\Mcrosoft\Xb1GameSave\Xb1GameSavetask"  <----- powershell shtasks, query one named Xb1GameSavetask
schedtasts.exe /query /tn "\Mcrosoft\Xb1GameSave\Xb1GameSavetask" /v /fo list   <----- list the information in a list
task scheduler <----- GUI for scheduled tasks


schtasks.exe /query /tn "Kaspersky Antivirus" /v /fo list    <----- query a protection service to see why the service is running

STATIC NETWORK CONNECTIONS
netstat -anob <------ check network connections, with the processid that was used
get-nettcpconnections <------ powershell version of netstat


SYSINTERNALS 
process explorer (procexp64.exe) <--- tool that gives you processes runnning, allows you to suspend a process, rather than killing it (right click the process)
process monitor (procmon.exe) <---- tool that is used for monitoring processes, used to find a bootkit (GUI Tool, not ommandline)
autoruns64.exe  <---- reads the registry, detects what starts automatically
 - Pink -digital signature could not be verified
 - Green - Matches previous set
 - Yellow - Entry exists but nothing is there
 tcpview.exe <----- gives a netstat-like network listing, but it is dynamic so it constantly refreshes
 - red - Network connection terminated
 - Green - Connection was made
 handles - sysinternals tool for handles
 AccessChk <----- find effective permissions (what permissions the file uses to execute), sysinternals 
LoadOrd <---- shows loaded orders

What command-line (cmd) command will show all services, running or not running?
sc queryex type=service state=inactive



